package view;

import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.paint.Color;

public class PipeGameDisplayer extends Canvas{
	
	int[][] pipeBoard;
	
	char LU = '|';
	char CLD = 'L';
	char CLU= 'r';
	char CRU = '7';
	char CRD = 'J';
	char LS = '-';
	char Start = 's';
	char Goal = 'g';
	
	public int getcRow() {
		return cRow;
	}
	
	public int getcCol() {
		return cCol;
	}

	public void setcPoition(int row, int col) {
		cRow = row;
		cCol = col;
		redraw();
	}

	private StringProperty picFileName;
	
	public PipeGameDisplayer()
	{
		picFileName = new SimpleStringProperty();
		cCol = 0;
		cRow = 1; 
	}
	
	public String getPicFileName() {
		return picFileName.get();
	}

	public void setPicFileName(String picFileName) {
		this.picFileName.set(picFileName);
	}


	public int[][] getPipeBoard() {
		return pipeBoard;
	}

	public void setPipeBoard(int[][] pipeBoard) {
		this.pipeBoard = pipeBoard;
		redraw();
	}
	
	public void redraw()
	{
		if (pipeBoard != null)
		{
			double W = getWidth();
			double H = getHeight();
			double w = W / pipeBoard[0].length;
			double h = H / pipeBoard.length;
			
			GraphicsContext gc = getGraphicsContext2D();
			
			Image pic = null;
			try {
				pic = new Image(new FileInputStream(picFileName.get()));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
			
			gc.clearRect(0, 0, W, H);
			
			for (int i = 0; i < pipeBoard.length ; i++ )
			{
				for ( int j = 0 ; j < pipeBoard[i].length; j++)
				{
					if (pipeBoard[i][j] != 0)
					{
						if (pic == null)
						{
							gc.fillRect(w*j, h*i, w, h);
						}
						else
						{
							gc.drawImage(pic, w*j, h*i, w, h); 
						}
					}
				}
			}
			gc.setFill(Color.RED);
			gc.fillOval(cCol*w, cRow*h, w/2, h/2);
			
		}
	}
}
